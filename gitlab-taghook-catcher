#!/usr/bin/env python
# -*- mode: python -*-

# Copyright 2014 Sebastian Jordan

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


"""This program starts a webserver that can handle tag push events
fromm gitlab by creating a new python release on a specified pypi
server."""

import argparse
import logging
from BaseHTTPServer import HTTPServer

from gitlabhookcatcher.taghook import PackageUploader


class HumboldtHookHandler(PackageUploader):
    """This class inherits its functionality from its parents and has no
    logic by itself.  If you want to extend the functionality of this
    class, create a seperate class that derives from 'HookHandler' and
    then derive from this class.  This enables a nice seperation
    between each class."""
    pass


def run_server(port, handler_klass=HumboldtHookHandler, server_klass=HTTPServer):
    """Start a webserver from the specified class"""
    server_address = ('', port)
    httpd = server_klass(server_address,handler_klass)
    logging.info("Start Webserver on port %i" % port)
    logging.info("Hit CTL-C to shut down the server")
    logging.info("Upload new releases to pypi repository \"%s\""\
          % handler_klass.pypirepo)
    # start web server
    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        httpd.socket.close()

        
if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    parser = argparse.ArgumentParser(\
        description="Start a webhook "
                    "catcher for handling 'tag push' events")
    parser.add_argument(
        '--port', 
        type=int,
        required=True,
        help='The port where the hook catcher will listen for post '
             'requests')
    parser.add_argument(
        '--repository',
        required=True,
        help='The name of the repository to send the distribution to')
    parser.add_argument(
        '--allowed',
        required=False,
        nargs='*',
        help='A list of IP addresses, that are allowed to push events')
    parser.add_argument(
        '--gitlabdomain',
        required=False,
        help='A list of domains of authorized gitlab instances')
    parser.add_argument(
        '--python-path',
        required=False,
        help='The path to the python interpreter that will be '
             'used to create the source distribution')
    args = parser.parse_args()

    # set the parameters of the server
    HumboldtHookHandler.allowedHosts=args.allowed # allowed host adresses
    HumboldtHookHandler.pypirepo=args.repository # pypi repository
    HumboldtHookHandler.allowedRepos=args.gitlabdomain # domain of the
                                                  # gitlab instance
    if not args.python_path is None:
        # python command to create distributions
        HumboldtHookHandler.python_path = args.python_path

    # start server
    run_server(args.port, HumboldtHookHandler)
